# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vaWpFrZzmBTLJY2AT3PiPoxqrdlQUwpy
"""

import pandas as pd
josep= pd.read_csv('/content/ElectionData.csv')
print("Shape of the social_media:",josep.shape)
josep.head(1000)

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
josep =pd.read_csv('/content/ElectionData.csv')
x= josep.drop('LIKES', axis =1)
y= josep['VOTE OUTCOME']
X_train, X_test, y_train, y_test = train_test_split(x,y, test_size=0.4, random_state=65)
josep= DecisionTreeClassifier(criterion= 'entropy',random_state=62)
josep.fit(X_train, y_train)

y_prediction= josep.predict(X_test)
print(y_prediction)

accuracy = accuracy_score(y_test,y_prediction)
print ('Accuracy:', accuracy)
print(f"Accuracy: {accuracy:.2f}")
report = classification_report(y_test, y_prediction)
print("Classification report:")
print(report)
conf_matrix= confusion_matrix (y_test,y_prediction)
print ("Confusion Matrix")
print(conf_matrix)

from sklearn import tree
from sklearn.datasets import load_files, load_iris
import matplotlib.pyplot as plt
iris = load_iris()
plt.figure(figsize=(15,10))
josep = tree.DecisionTreeClassifier()
josep.fit(iris.data, iris.target)
tree.plot_tree(josep, filled=True)
plt.show()

import joblib
josep = DecisionTreeClassifier(random_state= 62)
josep.fit(X_train, y_train)
joblib.dump(josep, 'decision_tree_model.pkl')